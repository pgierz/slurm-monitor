[project]
authors = [{name = "Paul Gierz", email = "paul.gierz@awi.de"}]
# [TODO]: It would be good to see if this can be removed, or if it is "separate"
#         from what is listed in [tool.pixi.dependencies]
#
#         After some more research, it seems that the dependencies listed **must**
#         be listed in both places. The [tool.pixi.dependencies] is used **solely**
#         for the pixi environment definition, and is not carried over when you want
#         to build a wheel or sdist for pypi.
#
#         See GH Issue #3
dependencies = [
  "streamlit>=1.44.1,<2",
  "duckdb>=1.2.2,<2",
  "paramiko>=3.5.1,<4",
  "loguru>=0.7.2,<0.8",
  "click>=8.1.8,<9",
  "requests>=2.32.3,<3",
  "lumen>=0.8.0,<0.9",
  "plotly>=6.0.1,<7",
  "build>=1.2.2.post1,<2",
  "dlt>=1.10.0,<2", "hatchling>=1.27.0,<2",
]

name = "slurm-monitor"
requires-python = ">= 3.11"
version = "0.4.1"

[project.scripts]
slurm-monitor = "slurm_monitor.cli:cli"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.tasks]
# This just mirrors the slurm-monitoring command line interface added
# in [project.scripts]
slurm-monitor = "python -m slurm_monitor.cli"
# The rest are specific tasks in pixi:
examples-config = "python examples/config_example.py"
examples-duckdb = "python examples/show_duckdb_example.py"
slurm-dbshow = "dlt pipeline slurm_pipeline show"
slurm-pipeline = "python -m slurm_monitor.cli pipeline slurm.remote run"
docs = "sphinx-build -b html docs docs/_build/html"
rtd = ".readthedocs/build.sh"
semrel = "semantic-release"

[tool.pixi.dependencies]
streamlit = ">=1.44.1,<2"
duckdb = ">=1.2.2,<2"
paramiko = ">=3.5.1,<4"
loguru = ">=0.7.2,<0.8"
click = ">=8.1.8,<9"
requests = ">=2.32.3,<3"
lumen = ">=0.8.0,<0.9"
plotly = ">=6.0.1,<7"

[tool.pixi.environments.dev]
features = ["dev"]

[tool.pixi.environments.doc]
features = ["doc"]

[tool.pixi.feature.dev.dependencies]
pre-commit = "*"
ruff = "*"
bumpversion = ">=0.5.3,<0.6"
commitizen = ">=4.6.0,<5"
python-semantic-release = ">=9.21.1,<10"

[tool.pixi.feature.doc.dependencies]
sphinx = "*"
pydata-sphinx-theme = ">=0.16.1,<0.17"

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "Version {version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
repo_dir = "."
no_git_verify = false
tag_format = "v{version}"
build_command = "python -m build"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = ""
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test", "repo"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = true
ignore_merge_commits = false

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
