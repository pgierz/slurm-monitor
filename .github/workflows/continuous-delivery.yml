name: Continuous Delivery
on:
  push:
    branches:
      - master
jobs:
  release:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/slurm-monitor
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false
    permissions:
      id-token: write
      contents: write
    steps:
      # Note: We checkout the repository at the branch that triggered the workflow
      # with the entire history to ensure to match PSR's release branch detection
      # and history evaluation.
      # However, we forcefully reset the branch to the workflow sha because it is
      # possible that the branch was updated while the workflow was running. This
      # prevents accidentally releasing un-evaluated changes.
      - name: Setup | Checkout Repository on Release Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0
      - name: Setup | Force release branch to be at workflow sha
        run: |
          git reset --hard ${{ github.sha }}
      - name: Evaluate | Verify upstream has NOT changed
        # Last chance to abort before causing an error as another PR/push was applied to
        # the upstream branch while this workflow was running. This is important
        # because we are committing a version change (--commit). You may omit this step
        # if you have 'commit: false' in your configuration.
        shell: bash
        run: |
          pwd
          ls -ratl
          .github/workflows/continuous-delivery/verify-upstream.sh
      - name: Setup | Set up Python
        uses: actions/setup-python@v4
      - name: Setup | Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatchling
      - name: Check | Ensure buildtools exist
        run: which hatch
      - name: Action | Semantic Version Release
        id: release
        # Adjust tag with desired version if applicable.
        uses: python-semantic-release/python-semantic-release@v9.21.1
        with:
          github_token: ${{ secrets.SEMANTIC_RELEASE_GITHUB_TOKEN }}
          # github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"
          build: true
      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v9.21.1
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
      - name: Publish | Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1 # vX.X.X
        if: steps.release.outputs.released == 'true'
